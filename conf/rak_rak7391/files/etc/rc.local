PG_VERSION=$(postgres -V | awk '{print $NF}')

# Make gateway-id show first slot Gateway ID
ln -s /tmp/concentratord_slot1_command /tmp/concentratord_command
ln -s /tmp/concentratord_slot1_event /tmp/concentratord_event

# Fixup after upgrade
chown -R postgres:postgres /srv/postgresql/${PG_VERSION}
if [ -d "/srv/postgresql/${PG_VERSION}/data" ]; then
    chmod 750 /srv/postgresql/${PG_VERSION}/data

    # Create missing dirs
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_notify
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_tblspc
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_replslot
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_twophase
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_snapshots
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_logical/snapshots
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_logical/mappings
    sudo -u postgres mkdir -p /srv/postgresql/${PG_VERSION}/data/pg_commit_ts
fi

# Wait for PostgreSQL to be available
while ! sudo -u postgres /usr/bin/pg_isready -h localhost; do
    echo "Waiting for PostgreSQL"
    sleep 1
done

# Setup ChirpStack database
while ! sudo -u postgres /usr/bin/psql -h localhost -c '' chirpstack; do
    echo "Init database"
    sudo -u postgres /usr/bin/psql -h localhost -c "create role chirpstack with login password 'chirpstack';"
    sudo -u postgres /usr/bin/psql -h localhost -c "create database chirpstack with owner chirpstack";
    sudo -u postgres /usr/bin/psql -h localhost -c "create extension pg_trgm;" chirpstack
    sudo -u postgres /usr/bin/psql -h localhost -c "create extension hstore;" chirpstack
    sleep 1
done
